fill = "Waste Type")
long_data <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
ggplot(long_data, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
sums_recent <- recent_data %>%
select(-Year) %>%
select(-Date) %>%
summarise(across(where(is.numeric), sum, na.rm = TRUE))
head(sums_recent)
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
# Read the CSV file
data <- read.csv("trashwheel.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
print(data)
# Filter data for the last 6 months
recent_data <- data %>%
filter(Date > max(Date) %m-% months(6))
print(recent_data)
sums_recent <- recent_data %>%
select(-Year) %>%
select(-Date) %>%
summarise(across(where(is.numeric), sum, na.rm = TRUE))
head(sums_recent)
long_data <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
print(long_data)
long_data <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
ggplot(long_data, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
long_data <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
ggplot(long_data, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar() +
theme_minimal() +
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
long_data <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
ggplot(long_data, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
sums_recent <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
print(sums_recent)
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_boxplot() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + # Rotate the x labels to be vertical
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
ggplot(recent_data, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_boxplot() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + # Rotate the x labels to be vertical
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
recent_data <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_boxplot() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + # Rotate the x labels to be vertical
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
sums_recent <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
# Read the CSV file
data <- read.csv("trashwheel.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
print(data)
# Filter data for the last 6 months
recent_data <- data %>%
filter(Date > max(Date) %m-% months(6))
print(recent_data)
sums_recent <- recent_data %>%
select(-Year) %>%
select(-Date) %>%
summarise(across(where(is.numeric), sum, na.rm = TRUE))
head(sums_recent)
sums_recent <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
print(sums_recent)
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_boxplot() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + # Rotate the x labels to be vertical
labs(title = "Boxplot of Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type")
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
theme_minimal() +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
head(data)
head(recent_data)
recent_data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate the x-axis text for better readability
recent_data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
recent_data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
head(recent_data_long)
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate the x-axis text for better readability
summary_stats <- recent_data_long %>%
group_by(Waste_Type) %>%
summarise(Median_Count = median(Count),
IQR = IQR(Count),
Lower_Whisker = quantile(Count, 0.25) - 1.5 * IQR(Count),
Upper_Whisker = quantile(Count, 0.75) + 1.5 * IQR(Count),
Mean_Count = mean(Count))
# Print the summary statistics
print(summary_stats)
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
lm_models <- recent_data_long %>%
group_by(Waste_Type) %>%
do(model = lm(Count ~ Month_Num, data = .))
months_num_full <- setNames(1:12, month.name)
recent_data$Month_Num <- months_num_full[recent_data$Month]
head(recent_data)
months_num <- setNames(1:12, month.abb)
data$Month_Num <- months_num[data$Month]
months_num_full <- setNames(1:12, month.name)
recent_data$Month_Num <- months_num_full[recent_data$Month]
head(recent_data)
months_num <- setNames(1:12, month.abb)
data$Month_Num <- months_num[data$Month]
months_num_full <- setNames(1:12, month.name)
recent_data$Month_Num <- months_num_full[recent_data$Month]
head(recent_data)
lm_models <- recent_data %>%
group_by(Waste_Type) %>%
do(model = lm(Count ~ Month_Num, data = .))
data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
head(data_long)
lm_models <- recent_data %>%
group_by(Waste_Type) %>%
do(model = lm(Count ~ Month_Num, data = .))
data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
head(data_long)
data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
print(data_long)
data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
head(data_long)
lm_models <- data_long %>%
group_by(Waste_Type) %>%
do(model = lm(Count ~ Month_Num, data = .))
data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls, Month_Num) %>%
gather(key = "Waste_Type", value = "Count", -Date)
head(data_long)
lm_models <- data_long %>%
group_by(Waste_Type) %>%
do(model = lm(Count ~ Month_Num, data = .))
data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls, Month_Num) %>%
gather(key = "Waste_Type", value = "Count", -Date)
head(data_long)
data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls, Month_Num) %>%
gather(key = "Waste_Type", value = "Count", -Month_Num)
head(data_long)
lm_models <- data_long %>%
group_by(Waste_Type) %>%
do(model = lm(Count ~ Month_Num, data = .))
summaries <- lm_models %>%
summarise(regression_summary = summary(model))
lm_models <- data_long %>%
group_by(Waste_Type) %>%
do(model = lm(Count ~ Month_Num, data = .))
summaries <- lm_models %>%
summarise(regression_summary = list(summary(model)))
print(summaries)
summary_stats <- recent_data_long %>%
group_by(Waste_Type) %>%
summarise(Median_Count = median(Count),
IQR = IQR(Count),
Lower_Whisker = quantile(Count, 0.25) - 1.5 * IQR(Count),
Upper_Whisker = quantile(Count, 0.75) + 1.5 * IQR(Count),
Mean_Count = mean(Count))
# Print the summary statistics
print(summary_stats)
ggplot(summary_stats, aes(x = Waste_Type, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Summary Statistics of Various Waste Types",
x = "Waste Type",
y = "Count",
fill = "Statistic Type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
waste_melted <- melt(summary_stats, id.vars = "Waste_Type")
library(dplyr)
waste_melted <- melt(summary_stats, id.vars = "Waste_Type")
library(tidyr)
waste_melted <- melt(summary_stats, id.vars = "Waste_Type")
waste_long <- pivot_longer(summary_stats, cols = -Waste_Type, names_to = "Statistic", values_to = "Value")
ggplot(summary_stats, aes(x = Waste_Type, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Summary Statistics of Various Waste Types",
x = "Waste Type",
y = "Count",
fill = "Statistic Type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
waste_long <- pivot_longer(summary_stats, cols = -Waste_Type, names_to = "Statistic", values_to = "Value")
ggplot(waste_long, aes(x = Waste_Type, y = value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Summary Statistics of Various Waste Types",
x = "Waste Type",
y = "Count",
fill = "Statistic Type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
waste_long <- pivot_longer(summary_stats, cols = -Waste_Type, names_to = "Statistic", values_to = "Value")
ggplot(waste_long, aes(x = Waste_Type, y = Value, fill = variable)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Summary Statistics of Various Waste Types",
x = "Waste Type",
y = "Count",
fill = "Statistic Type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
waste_long <- pivot_longer(summary_stats, cols = -Waste_Type, names_to = "Statistic", values_to = "Value")
ggplot(waste_long, aes(x = Waste_Type, y = Value)) +
geom_bar(stat = "identity", position = "dodge") +
theme_minimal() +
labs(title = "Summary Statistics of Various Waste Types",
x = "Waste Type",
y = "Count",
fill = "Statistic Type") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
# Read the CSV file
data <- read.csv("trashwheel.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
print(data)
# Filter data for the last 6 months
recent_data <- data %>%
filter(Date > max(Date) %m-% months(6))
print(recent_data)
sums_recent <- recent_data %>%
select(-Year) %>%
select(-Date) %>%
summarise(across(where(is.numeric), sum, na.rm = TRUE))
head(sums_recent)
sums_recent <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
print(sums_recent)
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
recent_data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
head(recent_data_long)
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_point() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_point() +
geom_line() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
summary_stats <- recent_data_long %>%
group_by(Waste_Type) %>%
summarise(Median_Count = median(Count),
IQR = IQR(Count),
Lower_Whisker = quantile(Count, 0.25) - 1.5 * IQR(Count),
Upper_Whisker = quantile(Count, 0.75) + 1.5 * IQR(Count),
Mean_Count = mean(Count))
# Print the summary statistics
print(summary_stats)
# Convert Date into a numeric format that represents days since the first date in the dataset
recent_data_long$Date_numeric <- as.numeric(recent_data_long$Date - min(recent_data_long$Date))
# Build a linear model for one type of waste, e.g., PlasticBottles
model_plastic_bottles <- lm(Count ~ Date_numeric, data = filter(recent_data_long, Waste_Type == "PlasticBottles"))
# Summary of the model to see coefficients
summary(model_plastic_bottles)
# Create a data frame for predictions
prediction_data <- data.frame(Date_numeric = seq(min(recent_data_long$Date_numeric), max(recent_data_long$Date_numeric), by = 1))
prediction_data$Predicted_Count <- predict(model_plastic_bottles, newdata = prediction_data)
# Convert back the numeric date to actual date for plotting
prediction_data$Date <- min(recent_data_long$Date) + prediction_data$Date_numeric
# Plotting actual data and predictions
ggplot(recent_data_long[recent_data_long$Waste_Type == "PlasticBottles", ], aes(x = Date, y = Count)) +
geom_point(aes(color = "Actual Data"), size = 2) +
geom_line(data = prediction_data, aes(x = Date, y = Predicted_Count, color = "Predicted Data")) +
theme_minimal() +
labs(title = "Predictive Model for Plastic Bottles Waste",
x = "Date",
y = "Count of Plastic Bottles",
color = "Data Type")
# Convert Date into a numeric format that represents days since the first date in the dataset
recent_data_long$Date_numeric <- as.numeric(recent_data_long$Date - min(recent_data_long$Date))
# Build a linear model for one type of waste, e.g., PlasticBottles
model_plastic_bottles <- lm(Count ~ Date_numeric, data = filter(recent_data_long, Waste_Type == "PlasticBottles"))
# Summary of the model to see coefficients
summary(model_plastic_bottles)
# Create a data frame for predictions
prediction_data <- data.frame(Date_numeric = seq(min(recent_data_long$Date_numeric), max(recent_data_long$Date_numeric), by = 3))
prediction_data$Predicted_Count <- predict(model_plastic_bottles, newdata = prediction_data)
# Convert back the numeric date to actual date for plotting
prediction_data$Date <- min(recent_data_long$Date) + prediction_data$Date_numeric
# Plotting actual data and predictions
ggplot(recent_data_long[recent_data_long$Waste_Type == "PlasticBottles", ], aes(x = Date, y = Count)) +
geom_point(aes(color = "Actual Data"), size = 2) +
geom_line(data = prediction_data, aes(x = Date, y = Predicted_Count, color = "Predicted Data")) +
theme_minimal() +
labs(title = "Predictive Model for Plastic Bottles Waste",
x = "Date",
y = "Count of Plastic Bottles",
color = "Data Type")
# Convert Date into a numeric format that represents days since the first date in the dataset
recent_data_long$Date_numeric <- as.numeric(recent_data_long$Date - min(recent_data_long$Date))
# Build a linear model for one type of waste, e.g., PlasticBottles
model_plastic_bottles <- lm(Count ~ Date_numeric, data = filter(recent_data_long, Waste_Type == "PlasticBottles"))
# Summary of the model to see coefficients
summary(model_plastic_bottles)
# Create a data frame for predictions
prediction_data <- data.frame(Date_numeric = seq(min(recent_data_long$Date_numeric), max(recent_data_long$Date_numeric), by = 1))
prediction_data$Predicted_Count <- predict(model_plastic_bottles, newdata = prediction_data)
# Convert back the numeric date to actual date for plotting
prediction_data$Date <- min(recent_data_long$Date) + prediction_data$Date_numeric
# Plotting actual data and predictions
ggplot(recent_data_long[recent_data_long$Waste_Type == "PlasticBottles", ], aes(x = Date, y = Count)) +
geom_point(aes(color = "Actual Data"), size = 2) +
geom_line(data = prediction_data, aes(x = Date, y = Predicted_Count, color = "Predicted Data")) +
theme_minimal() +
labs(title = "Predictive Model for Plastic Bottles Waste",
x = "Date",
y = "Count of Plastic Bottles",
color = "Data Type")
recent_data_long$Date_numeric <- as.numeric(recent_data_long$Date - min(recent_data_long$Date))
# List of waste types to model
waste_types <- c("Polystyrene", "CigaretteButts", "GlassBottles", "PlasticBags", "Wrappers", "SportsBalls")
# Initialize an empty list to store models
models <- list()
# Loop over waste types, fit model, and store
for(waste in waste_types) {
model <- lm(Count ~ Date_numeric, data = filter(recent_data_long, Waste_Type == waste))
models[[waste]] <- model
}
# Display summaries of all models (optional, can be verbose)
lapply(models, summary)
recent_data_long$Date_numeric <- as.numeric(recent_data_long$Date - min(recent_data_long$Date))
# List of waste types to model
waste_types <- c("Polystyrene", "CigaretteButts", "GlassBottles", "PlasticBags", "Wrappers", "SportsBalls")
# Initialize an empty list to store models
models <- list()
# Loop over waste types, fit model, and store
for(waste in waste_types) {
model <- lm(Count ~ Date_numeric, data = filter(recent_data_long, Waste_Type == waste))
models[[waste]] <- model
}
# Display summaries of all models (optional, can be verbose)
lapply(models, summary)
# Function to create prediction plots for a given waste type
create_prediction_plot <- function(waste) {
# Create prediction data
prediction_data <- data.frame(Date_numeric = seq(min(recent_data_long$Date_numeric), max(recent_data_long$Date_numeric), by = 1))
prediction_data$Predicted_Count <- predict(models[[waste]], newdata = prediction_data)
prediction_data$Date <- min(recent_data_long$Date) + prediction_data$Date_numeric
# Plotting
p <- ggplot(filter(recent_data_long, Waste_Type == waste), aes(x = Date, y = Count)) +
geom_point(aes(color = "Actual Data"), size = 2) +
geom_line(data = prediction_data, aes(x = Date, y = Predicted_Count, color = "Predicted Data")) +
theme_minimal() +
labs(title = paste("Predictive Model for", waste, "Waste"),
x = "Date",
y = paste("Count of", waste),
color = "Data Type")
return(p)
}
# Use the function to create plots (can be printed one by one or arranged on a grid)
plot_list <- lapply(waste_types, create_prediction_plot)
# Optionally, print all plots. You can use 'gridExtra::grid.arrange()' or similar to arrange plots.
plot_list[[1]]  # Example: print the first plot for Polystyrene
plot_list[[2]]
plot_list[[2]]
plot_list[[3]]
plot_list[[4]]
plot_list[[5]]
plot_list[[6]]
