library(ggplot2)
library(dplyr)
library(ggrepel)
# Assigning unique shapes to each Trash Wheel
shapes <- c(16, 17, 18, 19) # Circle, Triangle, Square, Diamond
ggplot(trashwheel_segments, aes(x = WeightGrowthRate, y = VolumeGrowthRate, color = Name)) +
geom_point(aes(shape = Name), size = 3) +
geom_smooth(method = "lm", se = FALSE) +
geom_text_repel(aes(label = if_else(Year == max(Year) | Year == min(Year), as.character(Year), "")),
nudge_y = 0.05, size = 3,
segment.color = 'grey50') + # Add labels to first and last years for clarity
scale_shape_manual(values = shapes) + # Apply the shapes
theme_minimal() +
labs(title = "Relationship Between Weight and Volume Growth Rates by Trash Wheel",
x = "Weight Growth Rate (%)", y = "Volume Growth Rate (%)") +
theme(legend.title = element_blank())
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
# Read the CSV file
data <- read.csv("trashwheel.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
# Filter data for the last 6 months
recent_data <- data %>%
filter(Date > max(Date) %m-% months(6))
sums_recent <- recent_data %>%
select(-Year) %>%
select(-Date) %>%
summarise(across(where(is.numeric), sum, na.rm = TRUE))
head(sums_recent)
sums_recent <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
print(sums_recent)
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
recent_data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
head(recent_data_long)
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
summary_stats <- recent_data_long %>%
group_by(Waste_Type) %>%
summarise(Median_Count = median(Count),
IQR = IQR(Count),
Lower_Whisker = quantile(Count, 0.25) - 1.5 * IQR(Count),
Upper_Whisker = quantile(Count, 0.75) + 1.5 * IQR(Count),
Mean_Count = mean(Count))
# Print the summary statistics
print(summary_stats)
recent_data_long$Date_numeric <- as.numeric(recent_data_long$Date - min(recent_data_long$Date))
# List of waste types to model
waste_types <- c("Polystyrene", "CigaretteButts", "GlassBottles", "PlasticBags", "Wrappers", "SportsBalls")
# Initialize an empty list to store models
models <- list()
# Loop over waste types, fit model, and store
for(waste in waste_types) {
model <- lm(Count ~ Date_numeric, data = filter(recent_data_long, Waste_Type == waste))
models[[waste]] <- model
}
# Display summaries of all models
lapply(models, summary)
# Function to create prediction plots for a given waste type
create_prediction_plot <- function(waste) {
# Extending the prediction range to include the next 3 months
max_date_numeric <- max(recent_data_long$Date_numeric)
future_extend <- as.numeric((max(recent_data_long$Date) %m+% months(3)) - max(recent_data_long$Date))
prediction_data <- data.frame(Date_numeric = seq(min(recent_data_long$Date_numeric), max_date_numeric + future_extend, by = 1))
prediction_data$Predicted_Count <- predict(models[[waste]], newdata = prediction_data)
prediction_data$Date <- min(recent_data_long$Date) + prediction_data$Date_numeric * days(1)
# Plotting
p <- ggplot(filter(recent_data_long, Waste_Type == waste), aes(x = Date, y = Count)) +
geom_point(aes(color = "Actual Data"), size = 2) +
geom_line(data = prediction_data, aes(x = Date, y = Predicted_Count, color = "Predicted Data")) +
theme_minimal() +
labs(title = paste("Predictive Model for", waste, "Waste"),
x = "Date",
y = paste("Count of", waste),
color = "Data Type")
return(p)
}
# Use the function to create plots
plot_list <- lapply(waste_types, create_prediction_plot)
plot_list[[1]]
plot_list[[2]]
plot_list[[3]]
plot_list[[4]]
plot_list[[5]]
plot_list[[6]]
# Prepare data for line graph
line_data <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles, PlasticBags, Wrappers, SportsBalls) %>%
pivot_longer(cols = -Date, names_to = "Waste_Type", values_to = "Count")
# Create a line graph
ggplot(line_data, aes(x = Date, y = Count, color = Waste_Type)) +
geom_line() +
labs(title = "Trends in Waste Disposal Over the Last 6 Months",
x = "Date",
y = "Count") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Assuming 'summary_stats' is your dataframe with the provided data
# Calculate error margin for IQR (taking half of the IQR as the error margin for simplicity)
summary_stats <- summary_stats %>%
mutate(Error_Margin = IQR / 2)
# Create a multi-faceted bar chart with error bars
ggplot(summary_stats, aes(x = Waste_Type, y = Median_Count, fill = Waste_Type)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Median_Count - Error_Margin, ymax = Median_Count + Error_Margin), width = 0.25) +
facet_wrap(~ Waste_Type, scales = "free_x") +
theme_minimal() +
labs(title = "Median Count of Various Waste Types with IQR Error Bars",
x = "Waste Type",
y = "Median Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())  # Remove x-axis text for clarity due to facets
# Filter data for the last 6 months
recent_data <- data %>%
filter(Date > max(Date) %m-% months(6))
head(recent_data)
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
scale_y_log10() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
scale_x_log10() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
recent_data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
print(recent_data_long)
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
# Read the CSV file
data <- read.csv("data/trashwheel.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
# Read the CSV file
data <- read.csv("data/trashwheel.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
# Filter data for the last 6 months
recent_data <- data %>%
filter(Date > max(Date) %m-% months(6))
head(recent_data)
sums_recent <- recent_data %>%
select(-Year) %>%
select(-Date) %>%
summarise(across(where(is.numeric), sum, na.rm = TRUE))
head(sums_recent)
sums_recent <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
print(sums_recent)
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
scale_y_log10() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
recent_data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
print(recent_data_long)
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
summary_stats <- recent_data_long %>%
group_by(Waste_Type) %>%
summarise(Median_Count = median(Count),
IQR = IQR(Count),
Lower_Whisker = quantile(Count, 0.25) - 1.5 * IQR(Count),
Upper_Whisker = quantile(Count, 0.75) + 1.5 * IQR(Count),
Mean_Count = mean(Count))
# Print the summary statistics
print(summary_stats)
recent_data_long$Date_numeric <- as.numeric(recent_data_long$Date - min(recent_data_long$Date))
# List of waste types to model
waste_types <- c("Polystyrene", "CigaretteButts", "GlassBottles", "PlasticBags", "Wrappers", "SportsBalls")
# Initialize an empty list to store models
models <- list()
# Loop over waste types, fit model, and store
for(waste in waste_types) {
model <- lm(Count ~ Date_numeric, data = filter(recent_data_long, Waste_Type == waste))
models[[waste]] <- model
}
# Display summaries of all models
lapply(models, summary)
# Function to create prediction plots for a given waste type
create_prediction_plot <- function(waste) {
# Extending the prediction range to include the next 3 months
max_date_numeric <- max(recent_data_long$Date_numeric)
future_extend <- as.numeric((max(recent_data_long$Date) %m+% months(3)) - max(recent_data_long$Date))
prediction_data <- data.frame(Date_numeric = seq(min(recent_data_long$Date_numeric), max_date_numeric + future_extend, by = 1))
prediction_data$Predicted_Count <- predict(models[[waste]], newdata = prediction_data)
prediction_data$Date <- min(recent_data_long$Date) + prediction_data$Date_numeric * days(1)
# Plotting
p <- ggplot(filter(recent_data_long, Waste_Type == waste), aes(x = Date, y = Count)) +
geom_point(aes(color = "Actual Data"), size = 2) +
geom_line(data = prediction_data, aes(x = Date, y = Predicted_Count, color = "Predicted Data")) +
theme_minimal() +
labs(title = paste("Predictive Model for", waste, "Waste"),
x = "Date",
y = paste("Count of", waste),
color = "Data Type")
return(p)
}
# Use the function to create plots
plot_list <- lapply(waste_types, create_prediction_plot)
plot_list[[1]]
plot_list[[2]]
plot_list[[3]]
plot_list[[4]]
plot_list[[5]]
plot_list[[6]]
# Prepare data for line graph
line_data <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles, PlasticBags, Wrappers, SportsBalls) %>%
pivot_longer(cols = -Date, names_to = "Waste_Type", values_to = "Count")
# Create a line graph
ggplot(line_data, aes(x = Date, y = Count, color = Waste_Type)) +
geom_line() +
labs(title = "Trends in Waste Disposal Over the Last 6 Months",
x = "Date",
y = "Count") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Calculate error margin for IQR (taking half of the IQR as the error margin for simplicity)
summary_stats <- summary_stats %>%
mutate(Error_Margin = IQR / 2)
# Create a multi-faceted bar chart with error bars
ggplot(summary_stats, aes(x = Waste_Type, y = Median_Count, fill = Waste_Type)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Median_Count - Error_Margin, ymax = Median_Count + Error_Margin), width = 0.25) +
facet_wrap(~ Waste_Type, scales = "free_x") +
theme_minimal() +
labs(title = "Median Count of Various Waste Types with IQR Error Bars",
x = "Waste Type",
y = "Median Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
# Read the CSV file
data <- read.csv("data/trashwheel.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
# Filter data for the last 6 months
recent_data <- data %>%
filter(Date > max(Date) %m-% months(6))
head(recent_data)
sums_recent <- recent_data %>%
select(-Year) %>%
select(-Date) %>%
summarise(across(where(is.numeric), sum, na.rm = TRUE))
head(sums_recent)
sums_recent <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
print(sums_recent)
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
scale_y_log10() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
recent_data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
print(recent_data_long)
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
summary_stats <- recent_data_long %>%
group_by(Waste_Type) %>%
summarise(Median_Count = median(Count),
IQR = IQR(Count),
Lower_Whisker = quantile(Count, 0.25) - 1.5 * IQR(Count),
Upper_Whisker = quantile(Count, 0.75) + 1.5 * IQR(Count),
Mean_Count = mean(Count))
# Print the summary statistics
print(summary_stats)
recent_data_long$Date_numeric <- as.numeric(recent_data_long$Date - min(recent_data_long$Date))
# List of waste types to model
waste_types <- c("Polystyrene", "CigaretteButts", "GlassBottles", "PlasticBags", "Wrappers", "SportsBalls")
# Initialize an empty list to store models
models <- list()
# Loop over waste types, fit model, and store
for(waste in waste_types) {
model <- lm(Count ~ Date_numeric, data = filter(recent_data_long, Waste_Type == waste))
models[[waste]] <- model
}
# Display summaries of all models
lapply(models, summary)
# Function to create prediction plots for a given waste type
create_prediction_plot <- function(waste) {
# Extending the prediction range to include the next 3 months
max_date_numeric <- max(recent_data_long$Date_numeric)
future_extend <- as.numeric((max(recent_data_long$Date) %m+% months(3)) - max(recent_data_long$Date))
prediction_data <- data.frame(Date_numeric = seq(min(recent_data_long$Date_numeric), max_date_numeric + future_extend, by = 1))
prediction_data$Predicted_Count <- predict(models[[waste]], newdata = prediction_data)
prediction_data$Date <- min(recent_data_long$Date) + prediction_data$Date_numeric * days(1)
# Plotting
p <- ggplot(filter(recent_data_long, Waste_Type == waste), aes(x = Date, y = Count)) +
geom_point(aes(color = "Actual Data"), size = 2) +
geom_line(data = prediction_data, aes(x = Date, y = Predicted_Count, color = "Predicted Data")) +
theme_minimal() +
labs(title = paste("Predictive Model for", waste, "Waste"),
x = "Date",
y = paste("Count of", waste),
color = "Data Type")
return(p)
}
# Use the function to create plots
plot_list <- lapply(waste_types, create_prediction_plot)
plot_list[[1]]
plot_list[[2]]
plot_list[[3]]
plot_list[[4]]
plot_list[[5]]
plot_list[[6]]
# Prepare data for line graph
line_data <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles, PlasticBags, Wrappers, SportsBalls) %>%
pivot_longer(cols = -Date, names_to = "Waste_Type", values_to = "Count")
# Create a line graph
ggplot(line_data, aes(x = Date, y = Count, color = Waste_Type)) +
geom_line() +
labs(title = "Trends in Waste Disposal Over the Last 6 Months",
x = "Date",
y = "Count") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Calculate error margin for IQR (taking half of the IQR as the error margin for simplicity)
summary_stats <- summary_stats %>%
mutate(Error_Margin = IQR / 2)
# Create a multi-faceted bar chart with error bars
ggplot(summary_stats, aes(x = Waste_Type, y = Median_Count, fill = Waste_Type)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Median_Count - Error_Margin, ymax = Median_Count + Error_Margin), width = 0.25) +
facet_wrap(~ Waste_Type, scales = "free_x") +
theme_minimal() +
labs(title = "Median Count of Various Waste Types with IQR Error Bars",
x = "Waste Type",
y = "Median Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
library(dplyr)
library(lubridate)
library(ggplot2)
library(tidyr)
# Read the CSV file
data <- read.csv("data/trashwheel.csv")
data$Date <- as.Date(data$Date, format = "%m/%d/%Y")
# Filter data for the last 6 months
recent_data <- data %>%
filter(Date > max(Date) %m-% months(6))
head(recent_data)
sums_recent <- recent_data %>%
select(-Year) %>%
select(-Date) %>%
summarise(across(where(is.numeric), sum, na.rm = TRUE))
head(sums_recent)
sums_recent <- pivot_longer(sums_recent, cols = everything(), names_to = "Waste_Type", values_to = "Total")
print(sums_recent)
ggplot(sums_recent, aes(x = Waste_Type, y = Total, fill = Waste_Type)) +
geom_bar(stat = "identity") +
scale_y_log10() +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
labs(title = "Total Waste Collected Over the Last 6 Months",
x = "Waste Type",
y = "Total Collected",
fill = "Waste Type") +
scale_fill_brewer(palette = "Set3")
recent_data_long <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles,
PlasticBags, Wrappers, SportsBalls) %>%
gather(key = "Waste_Type", value = "Count", -Date)
print(recent_data_long)
ggplot(recent_data_long, aes(x = Waste_Type, y = Count)) +
geom_boxplot() +
theme_minimal() +
labs(title = "Boxplot of Various Waste Types Over the Last 6 Months",
x = "Waste Type",
y = "Count") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
summary_stats <- recent_data_long %>%
group_by(Waste_Type) %>%
summarise(Median_Count = median(Count),
IQR = IQR(Count),
Lower_Whisker = quantile(Count, 0.25) - 1.5 * IQR(Count),
Upper_Whisker = quantile(Count, 0.75) + 1.5 * IQR(Count),
Mean_Count = mean(Count))
# Print the summary statistics
print(summary_stats)
recent_data_long$Date_numeric <- as.numeric(recent_data_long$Date - min(recent_data_long$Date))
# List of waste types to model
waste_types <- c("Polystyrene", "CigaretteButts", "GlassBottles", "PlasticBags", "Wrappers", "SportsBalls")
# Initialize an empty list to store models
models <- list()
# Loop over waste types, fit model, and store
for(waste in waste_types) {
model <- lm(Count ~ Date_numeric, data = filter(recent_data_long, Waste_Type == waste))
models[[waste]] <- model
}
# Display summaries of all models
lapply(models, summary)
# Function to create prediction plots for a given waste type
create_prediction_plot <- function(waste) {
# Extending the prediction range to include the next 3 months
max_date_numeric <- max(recent_data_long$Date_numeric)
future_extend <- as.numeric((max(recent_data_long$Date) %m+% months(3)) - max(recent_data_long$Date))
prediction_data <- data.frame(Date_numeric = seq(min(recent_data_long$Date_numeric), max_date_numeric + future_extend, by = 1))
prediction_data$Predicted_Count <- predict(models[[waste]], newdata = prediction_data)
prediction_data$Date <- min(recent_data_long$Date) + prediction_data$Date_numeric * days(1)
# Plotting
p <- ggplot(filter(recent_data_long, Waste_Type == waste), aes(x = Date, y = Count)) +
geom_point(aes(color = "Actual Data"), size = 2) +
geom_line(data = prediction_data, aes(x = Date, y = Predicted_Count, color = "Predicted Data")) +
theme_minimal() +
labs(title = paste("Predictive Model for", waste, "Waste"),
x = "Date",
y = paste("Count of", waste),
color = "Data Type")
return(p)
}
# Use the function to create plots
plot_list <- lapply(waste_types, create_prediction_plot)
plot_list[[1]]
plot_list[[2]]
plot_list[[3]]
plot_list[[4]]
plot_list[[5]]
plot_list[[6]]
# Prepare data for line graph
line_data <- recent_data %>%
select(Date, PlasticBottles, Polystyrene, CigaretteButts, GlassBottles, PlasticBags, Wrappers, SportsBalls) %>%
pivot_longer(cols = -Date, names_to = "Waste_Type", values_to = "Count")
# Create a line graph
ggplot(line_data, aes(x = Date, y = Count, color = Waste_Type)) +
geom_line() +
labs(title = "Trends in Waste Disposal Over the Last 6 Months",
x = "Date",
y = "Count") +
theme_minimal()
library(ggplot2)
library(dplyr)
# Calculate error margin for IQR (taking half of the IQR as the error margin for simplicity)
summary_stats <- summary_stats %>%
mutate(Error_Margin = IQR / 2)
# Create a multi-faceted bar chart with error bars
ggplot(summary_stats, aes(x = Waste_Type, y = Median_Count, fill = Waste_Type)) +
geom_bar(stat = "identity", position = position_dodge()) +
geom_errorbar(aes(ymin = Median_Count - Error_Margin, ymax = Median_Count + Error_Margin), width = 0.25) +
facet_wrap(~ Waste_Type, scales = "free_x") +
theme_minimal() +
labs(title = "Median Count of Various Waste Types with IQR Error Bars",
x = "Waste Type",
y = "Median Count") +
theme(axis.text.x = element_blank(), axis.ticks.x = element_blank())
